# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form_for_sniffer_version4.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QPlainTextEdit, QWidget, QGridLayout, QVBoxLayout, QHBoxLayout, QSpacerItem, QSizePolicy
from PyQt5.QtCore import QTimer, pyqtSignal, QObject


# Класс TextEditLogger для перенаправления вывода в QPlainTextEdit
class TextEditLogger(QPlainTextEdit):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.buffer = []
        self.timer = QTimer(self)
        self.timer.timeout.connect(self.flush_buffer)
        self.timer.start(100)

    def write(self, text):
        self.buffer.append(text)

    def flush_buffer(self):
        if self.buffer:
            self.appendPlainText("".join(self.buffer))
            self.buffer.clear()

    def flush(self):
        self.flush_buffer()


class Ui_tableWidget_metrics(object):
    def setupUi(self, tableWidget_metrics):
        tableWidget_metrics.setObjectName("tableWidget_metrics")
        # tableWidget_metrics.resize(1827, 1106) # Убираем жесткий размер, будем использовать компоновку

        # Создаем главный QGridLayout для всей формы
        self.main_layout = QGridLayout(tableWidget_metrics)
        self.main_layout.setObjectName("main_layout")

        self.label_name_of_work = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(22)
        self.label_name_of_work.setFont(font)
        self.label_name_of_work.setObjectName("label_name_of_work")
        self.label_name_of_work.setAlignment(QtCore.Qt.AlignCenter)  # Выравнивание по центру
        self.main_layout.addWidget(self.label_name_of_work, 0, 0, 1, 4)  # Размещаем заголовок

        # --- Левая колонка (Входные данные, перехваченные пакеты, таблица) ---
        self.left_column_layout = QVBoxLayout()
        self.left_column_layout.setObjectName("left_column_layout")

        self.label_input_data = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_input_data.setFont(font)
        self.label_input_data.setObjectName("label_input_data")
        self.left_column_layout.addWidget(self.label_input_data)

        # Компоновка для периода, интерфейса и сети
        self.input_params_layout = QHBoxLayout()
        self.input_params_layout.setObjectName("input_params_layout")

        self.input_labels_layout = QVBoxLayout()
        self.input_labels_layout.setObjectName("input_labels_layout")
        self.label_name_time_of_capture = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_time_of_capture.setFont(font)
        self.label_name_time_of_capture.setObjectName("label_name_time_of_capture")
        self.input_labels_layout.addWidget(self.label_name_time_of_capture)
        self.label_interface_of_capture = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_interface_of_capture.setFont(font)
        self.label_interface_of_capture.setObjectName("label_interface_of_capture")
        self.input_labels_layout.addWidget(self.label_interface_of_capture)
        self.label_name_network_capture = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_network_capture.setFont(font)
        self.label_name_network_capture.setObjectName("label_name_network_capture")
        self.input_labels_layout.addWidget(self.label_name_network_capture)
        self.input_params_layout.addLayout(self.input_labels_layout)

        self.input_widgets_layout = QVBoxLayout()
        self.input_widgets_layout.setObjectName("input_widgets_layout")
        self.spinBox_time_of_capture = QtWidgets.QSpinBox(tableWidget_metrics)
        self.spinBox_time_of_capture.setMaximum(10000)
        self.spinBox_time_of_capture.setObjectName("spinBox_time_of_capture")
        self.input_widgets_layout.addWidget(self.spinBox_time_of_capture)
        self.comboBox_interface_of_capture = QtWidgets.QComboBox(tableWidget_metrics)
        self.comboBox_interface_of_capture.setObjectName("comboBox_interface_of_capture")
        self.input_widgets_layout.addWidget(self.comboBox_interface_of_capture)
        self.lineEdit_network_capture = QtWidgets.QLineEdit(tableWidget_metrics)
        self.lineEdit_network_capture.setObjectName("lineEdit_network_capture")
        self.input_widgets_layout.addWidget(self.lineEdit_network_capture)
        self.input_params_layout.addLayout(self.input_widgets_layout)

        self.left_column_layout.addLayout(self.input_params_layout)

        # Кнопки Старт/Стоп
        self.capture_buttons_layout = QHBoxLayout()
        self.capture_buttons_layout.setObjectName("capture_buttons_layout")
        self.pushBatton_start_capture = QtWidgets.QPushButton(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.pushBatton_start_capture.setFont(font)
        self.pushBatton_start_capture.setObjectName("pushBatton_start_capture")
        self.capture_buttons_layout.addWidget(self.pushBatton_start_capture)

        spacerItem = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.capture_buttons_layout.addItem(spacerItem)  # Добавляем растяжку между кнопками

        self.pushButton_stop_capture = QtWidgets.QPushButton(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_stop_capture.setFont(font)
        self.pushButton_stop_capture.setObjectName("pushButton_stop_capture")
        self.capture_buttons_layout.addWidget(self.pushButton_stop_capture)
        self.left_column_layout.addLayout(self.capture_buttons_layout)

        self.label_name_capture_display = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_capture_display.setFont(font)
        self.label_name_capture_display.setObjectName("label_name_capture_display")
        self.left_column_layout.addWidget(self.label_name_capture_display)

        self.plainTextEdit = TextEditLogger(tableWidget_metrics)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.left_column_layout.addWidget(self.plainTextEdit, 1)  # Растягиваем plainTextEdit

        self.label_data_statistics_of_capture_traffic = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_data_statistics_of_capture_traffic.setFont(font)
        self.label_data_statistics_of_capture_traffic.setObjectName("label_data_statistics_of_capture_traffic")
        self.left_column_layout.addWidget(self.label_data_statistics_of_capture_traffic)

        self.tableWidget_metric = QtWidgets.QTableWidget(tableWidget_metrics)
        self.tableWidget_metric.setObjectName("tableWidget_metric")
        self.tableWidget_metric.setColumnCount(9)
        self.tableWidget_metric.setRowCount(0)
        # Убраны item = QtWidgets.QTableWidgetItem() и setHorizontalHeaderItem,
        # так как они будут установлены в main.py для большей гибкости.
        self.left_column_layout.addWidget(self.tableWidget_metric, 2)  # Растягиваем таблицу

        # Кнопки Сохранить/Закрыть (нижний левый угол)
        self.bottom_buttons_layout = QHBoxLayout()
        self.bottom_buttons_layout.setObjectName("bottom_buttons_layout")
        self.pushButton_save_in_file = QtWidgets.QPushButton(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_save_in_file.setFont(font)
        self.pushButton_save_in_file.setObjectName("pushButton_save_in_file")
        self.bottom_buttons_layout.addWidget(self.pushButton_save_in_file)

        self.bottom_buttons_layout.addItem(spacerItem)  # Добавляем растяжку

        self.pushBatton_finish_work = QtWidgets.QPushButton(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.pushBatton_finish_work.setFont(font)
        self.pushBatton_finish_work.setObjectName("pushBatton_finish_work")
        self.bottom_buttons_layout.addWidget(self.pushBatton_finish_work)
        self.left_column_layout.addLayout(self.bottom_buttons_layout)

        self.main_layout.addLayout(self.left_column_layout, 1, 0, 1,
                                   2)  # Левая колонка занимает 2 столбца и 1 строку (под заголовком)

        # --- Правая колонка (Графики) ---
        self.right_column_layout = QVBoxLayout()
        self.right_column_layout.setObjectName("right_column_layout")

        # График интенсивности
        self.label_name_graph_of_intensivity = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_graph_of_intensivity.setFont(font)
        self.label_name_graph_of_intensivity.setObjectName("label_name_graph_of_intensivity")
        self.right_column_layout.addWidget(self.label_name_graph_of_intensivity)
        self.graphWidget_intensity = QtWidgets.QWidget(tableWidget_metrics)
        self.graphWidget_intensity.setObjectName("graphWidget_intensity")
        self.right_column_layout.addWidget(self.graphWidget_intensity, 1)  # Растягиваем

        # График входящего/исходящего трафика
        self.label_name_graph_of_input_output_traffic = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_graph_of_input_output_traffic.setFont(font)
        self.label_name_graph_of_input_output_traffic.setObjectName("label_name_graph_of_input_output_traffic")
        self.right_column_layout.addWidget(self.label_name_graph_of_input_output_traffic)
        self.graphWidget_traffic_direction = QtWidgets.QWidget(tableWidget_metrics)
        self.graphWidget_traffic_direction.setObjectName("graphWidget_traffic_direction")
        self.right_column_layout.addWidget(self.graphWidget_traffic_direction, 1)  # Растягиваем

        # График соотношения TCP/UDP
        self.label_name_tcp_udp_segments_sootcnocheniy = QtWidgets.QLabel(tableWidget_metrics)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_name_tcp_udp_segments_sootcnocheniy.setFont(font)
        self.label_name_tcp_udp_segments_sootcnocheniy.setObjectName("label_name_tcp_udp_segments_sootcnocheniy")
        self.right_column_layout.addWidget(self.label_name_tcp_udp_segments_sootcnocheniy)
        self.graphWidget_protocol_distribution = QtWidgets.QWidget(tableWidget_metrics)
        self.graphWidget_protocol_distribution.setObjectName("graphWidget_protocol_distribution")
        self.right_column_layout.addWidget(self.graphWidget_protocol_distribution, 1)  # Растягиваем

        self.main_layout.addLayout(self.right_column_layout, 1, 2, 1, 2)  # Правая колонка занимает 2 столбца и 1 строку

        self.retranslateUi(tableWidget_metrics)
        QtCore.QMetaObject.connectSlotsByName(tableWidget_metrics)

    def retranslateUi(self, tableWidget_metrics):
        _translate = QtCore.QCoreApplication.translate
        tableWidget_metrics.setWindowTitle(
            _translate("tableWidget_metrics", "Анализатор сетевого трафика"))  # Обновлено название окна
        self.label_name_of_work.setText(_translate("tableWidget_metrics", "Программа анализа перехваченных пакетов"))
        self.pushBatton_start_capture.setText(
            _translate("tableWidget_metrics", "Начать захват"))  # Обновлено название кнопки
        self.pushButton_stop_capture.setText(_translate("tableWidget_metrics", "Прекратить"))
        self.label_name_capture_display.setText(_translate("tableWidget_metrics", "Перехваченные пакеты"))
        self.label_input_data.setText(_translate("tableWidget_metrics", "Входные данные"))
        # Заголовки таблицы устанавливаются в main.py для гибкости
        self.label_data_statistics_of_capture_traffic.setText(
            _translate("tableWidget_metrics", "Данные статистики, собранные с перехваченного трафика"))
        self.label_name_graph_of_intensivity.setText(_translate("tableWidget_metrics", "График интенсивности пакетов"))
        self.label_name_graph_of_input_output_traffic.setText(
            _translate("tableWidget_metrics", "График исходящего/входящего трафика"))
        self.label_name_tcp_udp_segments_sootcnocheniy.setText(
            _translate("tableWidget_metrics", "Соотношение UDP/TCP сегментов"))
        self.pushButton_save_in_file.setText(_translate("tableWidget_metrics", "Сохранить данные"))
        self.pushBatton_finish_work.setText(_translate("tableWidget_metrics", "Закрыть программу"))
        self.label_name_time_of_capture.setText(_translate("tableWidget_metrics", "Период времени захвата пакетов"))
        self.label_interface_of_capture.setText(_translate("tableWidget_metrics", "Интерфейс захвата:"))
        self.label_name_network_capture.setText(_translate("tableWidget_metrics", "Сеть захвата:"))
        self.lineEdit_network_capture.setText(
            _translate("tableWidget_metrics", "192.168.1.0/24"))  # Добавлено значение по умолчанию для удобства


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_tableWidget_metrics()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())